/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/blog_posts": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.blog_posts.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["blog_posts"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** blog_posts */
          blog_posts?: definitions["blog_posts"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.blog_posts.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.blog_posts.id"];
        };
        body: {
          /** blog_posts */
          blog_posts?: definitions["blog_posts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/inline_comments": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.inline_comments.id"];
          text?: parameters["rowFilter.inline_comments.text"];
          custom_attributes?: parameters["rowFilter.inline_comments.custom_attributes"];
          blog_post_id?: parameters["rowFilter.inline_comments.blog_post_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["inline_comments"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** inline_comments */
          inline_comments?: definitions["inline_comments"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.inline_comments.id"];
          text?: parameters["rowFilter.inline_comments.text"];
          custom_attributes?: parameters["rowFilter.inline_comments.custom_attributes"];
          blog_post_id?: parameters["rowFilter.inline_comments.blog_post_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.inline_comments.id"];
          text?: parameters["rowFilter.inline_comments.text"];
          custom_attributes?: parameters["rowFilter.inline_comments.custom_attributes"];
          blog_post_id?: parameters["rowFilter.inline_comments.blog_post_id"];
        };
        body: {
          /** inline_comments */
          inline_comments?: definitions["inline_comments"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  blog_posts: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
  };
  inline_comments: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    text?: string;
    custom_attributes?: string;
    /**
     * Note:
     * This is a Foreign Key to `blog_posts.id`.<fk table='blog_posts' column='id'/>
     */
    blog_post_id?: number;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** blog_posts */
  "body.blog_posts": definitions["blog_posts"];
  "rowFilter.blog_posts.id": string;
  /** inline_comments */
  "body.inline_comments": definitions["inline_comments"];
  "rowFilter.inline_comments.id": string;
  "rowFilter.inline_comments.text": string;
  "rowFilter.inline_comments.custom_attributes": string;
  "rowFilter.inline_comments.blog_post_id": string;
}

export interface operations {}
